import pygame as pg
from sys import exit


pg.init()
screen = pg.display.set_mode((800, 400))
pg.display.set_caption('SADIKS GAME')
clock = pg.time.Clock()
test_font = pg.font.Font(None, 30)
score = 0

# Surfaces
sky_surf = pg.image.load('graphics/sky.png')
ground_surf = pg.image.load('graphics/ground.png')
player_surf = pg.image.load('graphics/snail/snail1.png')
player_rect = player_surf.get_rect(midbottom=(60, 300))
player_gravity = 0
snail_surf = pg.image.load('graphics/player/player_walk_1.png')
snail_rect = snail_surf.get_rect(bottomright=(600, 300))

# Intro scene
player_stand = pg.image.load('graphics/snail/snail1.png')
player_stand_rect = player_stand.get_rect(center=(400, 200))
msg = test_font.render('Press SPACE to JUMP,L-ctrl to charge timer,L-alt to go back in time',False,('white'))
msg_rect = msg.get_rect(center=(400,50))

def display_score():
    current_time = pg.time.get_ticks() // 1000 - start_time
    score_surf = test_font.render(f'SCORE : {current_time}', False, (64, 64, 64))
    score_rect = score_surf.get_rect(center=(400, 50))
    screen.blit(score_surf, score_rect)
    return current_time
MAX_POSITIONS = 100
positions = []

# Function for storing and reverting positions
def run_store_restore_positions():
    global positions
    if len(positions) == MAX_POSITIONS:
        positions.pop(0) # remove oldest position if array is full
    if pg.key.get_pressed()[pg.K_LCTRL]:
        positions.append((player_rect.y, snail_rect.x))
    if pg.key.get_pressed()[pg.K_LALT]:
        if len(positions) > 0:
            player_rect.y, snail_rect.x = positions.pop()

game_active = False
start_time = 0

while True:
    for event in pg.event.get():
        if event.type == pg.QUIT:
            pg.quit()
            exit()
        if game_active:
            if event.type == pg.KEYDOWN and event.key == pg.K_SPACE and player_rect.bottom >= 220:
                player_gravity = -35
        else:
            if event.type == pg.KEYDOWN and event.key == pg.K_SPACE:
                game_active = True
                snail_rect.left = 800
                start_time = pg.time.get_ticks() // 1000

    if game_active:
        run_store_restore_positions()
        screen.blit(sky_surf, (0, 0))
        screen.blit(ground_surf, (0, 300))
        score = display_score()
        snail_rect.x -= 6
        if snail_rect.right <= 0:
            snail_rect.left = 800
        screen.blit(snail_surf, snail_rect)
        player_gravity += 2
        player_rect.y += player_gravity
        if player_rect.bottom > 300:
            player_rect.bottom = 300
        screen.blit(player_surf, player_rect)
        if player_rect.colliderect(snail_rect):
            game_active = False
    else:
        screen.fill('Blue')
        screen.blit(player_stand, player_stand_rect)
        screen.blit(msg,msg_rect)
        score_msg = test_font.render(f'Your score is : {score}',False,('white'))
        score_msg_rect = score_msg.get_rect(center=(400,300))
        if score == 0:  screen.blit(msg,msg_rect)
        else: screen.blit(score_msg,score_msg_rect)
    pg.display.update()
    clock.tick(30)